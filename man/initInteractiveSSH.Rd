% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interactiveSSH.R
\name{initInteractiveSSH}
\alias{initInteractiveSSH}
\title{Initiate interactive SSH session}
\usage{
initInteractiveSSH(login, password = NULL, pwfile = NULL, port = 22,
  share = FALSE, tempdir.loc, verbosity = 1, timeout.cmd = 20,
  timeout.con = 20, PS1 = "ScientificClusterPrompt> ",
  regexPS1 = "\\033\\\\]0;.*?ScientificCluster>", delay = c(1, 1, 1, 5, 5,
  5), delay2 = delay * 1.5)
}
\arguments{
\item{login}{login in the form user@host}

\item{password}{password of ssh connection}

\item{pwfile}{file with password in the first line (overrides parameter \code{password})}

\item{port}{ssh server port}

\item{share}{enable connection multiplexing (e.g. in combination with rsync)}

\item{tempdir.loc}{directory to store all connection related files}

\item{verbosity}{level of verbosity of information messages}

\item{timeout.cmd}{maximum allowed duration of a command to finish}

\item{timeout.con}{maximum allowed duration to establish connection}

\item{PS1}{desired bash prompt (this string should not appear in the output of commands)}

\item{regexPS1}{regular expression to capture the bash prompt (can equal \code{PS1} if only alphanumeric characters)}

\item{delay}{how long to wait between connection attempts (lower limit)}

\item{delay2}{how long to wait between connection attempts (upper limit)}
}
\value{
A list (think object) with functions to execute bash commands remotely, see \code{details}
}
\description{
Initiate interactive SSH session
}
\details{
The list returned by this function contains the following functions:
\tabular{ll}{
\code{execBash(cmds)} \tab execute the commands given in character vector \code{cmds} and return the results
as a list of character vectors\cr
\code{send(cmds)} \tab send the commands given in \code{cmds}\cr
\code{read} \tab read the output of the ssh connection (attention, may also contain the send commands) \cr
\code{readRaw} \tab read the raw output (do split output string using RETURN and LINEFEED)\cr
\code{sendFile(src,dest,\cr chunk.size=1024)}\tab transmit a file over the ssh connection (very slow, around kbyte/sec)\cr
\code{getSocketFile()}\tab return the full path to the socket file (only useful if \code{share=TRUE})\cr
\code{getPwfile()}\tab return the full path to the password file\cr
\code{closeCon()}\tab close the connection and clean up temporary files\cr
}
}
\note{
\itemize{
  \item Do not forget to close the connection afterwards with \code{closeCon()}
  \item If \code{PS1} is NULL, the bash prompt will not be changed and the function \code{execBash} will not be available.
}
}
